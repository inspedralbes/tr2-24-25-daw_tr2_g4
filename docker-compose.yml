
services:
  # Servicio de la base de datos MySQL
  db:
    image: mysql:8.2.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: masket
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    ports:
      - "1000:3306"  # Mapeo de puertos
    volumes:
      - ./mysql_data:/var/lib/mysql  # Persistencia de datos
      - ./back/laravel.sql:/docker-entrypoint-initdb.d/laravel.sql  # Archivo SQL para inicializar

  # Adminer para gestionar la base de datos
  adminer:
    image: adminer
    restart: always
    depends_on:
      - db  # Asegura que db esté levantado primero
    ports:
      - "9092:8080"  # Exponiendo el puerto de Adminer

  # Servicio de la aplicación Laravel (back)
  laravel:
    build: ./back/laravel  # Ruta a la carpeta de Laravel
    volumes:
      - ./back/laravel:/var/www/  # Montar el directorio Laravel
    working_dir: /var/www/
    ports:
      - "8000:8000"  # Exponiendo el puerto 8000
    depends_on:
      - db  # Asegura que db esté levantado antes que Laravel
    command: bash -c "composer install && php artisan key:generate && php artisan migrate && php artisan serve --host=0.0.0.0"

  # Servicio de Node.js (Servidor WebSocket)
  node:
    image: node:19-bullseye-slim  # Imagen base de Node.js sin Dockerfile
    volumes:
      - ./back/node:/var/www  # Montar el directorio de Node.js
    working_dir: /var/www
    ports:
      - "3100:8080"  # Exponiendo el puerto 8080 para el WebSocket
    depends_on:
      - db  # Asegura que db esté levantado antes que Node.js
    command: ["node", "server.js"]  # Asegúrate de que el archivo 'server.js' sea el punto de entrada

  # Servicio de la aplicación Vue.js
  vue-app:
    image: node:18  # Imagen base de Node.js para Vue.js
    working_dir: /app  # Directorio de trabajo dentro del contenedor
    volumes:
      - ./front/basket:/app  # Monta tu aplicación Vue.js en el contenedor
    ports:
      - "5176:5176"  # PUERTO PARA VUE
    command: /bin/bash -c "npm install && npm run dev"  # Instalación de dependencias y luego iniciar el servidor de desarrollo
    depends_on:
      - db  
